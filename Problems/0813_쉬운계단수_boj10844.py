import sys
divisor = 1000000000

def dp(N):
    global res
    answer = 0
    res[0][1] = 0
    for j in range(1, 10):
        res[j][1] = 1
    
    for i in range(2, N + 1):
        for j in range(10):
            if j != 0 and j != 9:
                res[j][i] = res[j-1][i-1] + res[j+1][i-1]
            elif j == 0:
                res[j][i] = res[j+1][i-1]
            else:
                res[j][i] = res[j-1][i-1]

    for j in range(10):
        answer += res[j][N]
    return answer % divisor

N = int(sys.stdin.readline().rstrip())
res = [[0 for _ in range(N+1)] for _ in range(10)]
print(dp(N) % divisor)

# res[0~9로 끝나는 수][길이]
# res[a][N] = res[a+1][N-1] + res[a-1][N-1]
#   1 2 3 4 5 6 7 8 9 10 ... N
# 0 0 1 1
# 1 1 1 3
# 2 1 2 3
# 3 1 2 4
# 4 1 2 4
# 5 1 2 4
# 6 1 2 4
# 7 1 2 4
# 8 1 2 3
# 9 1 1 2

# 1 - 9개
# 1~9

# 2 - 17개 = 9 * 2 - 1
# 10 12
# 21 23
# 32 34
# 43 45
# 54 56
# 65 67
# 76 78
# 87 89
# 98

# 3 - 32개 = 17 * 2 - 2
# 처음,감소,감소 / 처음,감소,처음 / 처음,증가,처음 / 처음,증가,증가
# 101 121 123
# 210 212 232 234
# 321 323 343 345
# 432 434 454 456
# 543 545 565 567
# 654 656 676 678
# 765 767 787 789
# 876 878 898
# 987 989

# 4 - 61개 = 32 * 2 - 3
# 1010 1012 1210 1212 1232 1234
# 2101 2121 2123 2321 2323 2343 2345
# 3210 3212 3232 3234 3432 3434 3454 3456
# 4321 4323 4343 4345 4543 4545 4565 4567
# 5432 5434 5454 5456 5654 5656 5676 5678
# 6543 6545 6565 6567 6765 6767 6787 6789
# 7654 7656 7676 7678 7876 7878 7898
# 8765 8767 8787 8789 8987 8989
# 9876 9878 9898
# 처음,감소,감소,감소 / 처음,감소,감소,증가 / 처음,감소,증가,감소 / 처음,감소,증가,증가
# 처음,증가,감소,감소 / 처음,증가,감소,증가 / 처음,증가,증가,감소 / 처음,증가,증가,증가